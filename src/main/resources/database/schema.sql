-- begin spring security tables
create table users(
	username varchar_ignorecase(50) not null primary key,
	password varchar_ignorecase(50) not null,
	enabled boolean not null
);
 
create table authorities (
	username varchar_ignorecase(50) not null,
	authority varchar_ignorecase(50) not null,
	constraint fk_authorities_users foreign key(username) references users(username)
);
	
create table groups (
	id bigint generated by default as identity(start with 1) primary key,
	group_name varchar_ignorecase(50) not null
);

create table group_authorities (
	group_id bigint not null,
	authority varchar(50) not null,
	constraint fk_group_authorities_groups foreign key(group_id) references groups(id)
);

create table group_members (
	id bigint generated by default as identity(start with 1) primary key,
	username varchar(50) not null,
	group_id bigint not null,
	constraint fk_group_members_groups foreign key(group_id) references groups(id)
	);
-- end spring security tables

-- begin org chart tables
create table employees (
	id int primary key, username varchar(50) unique,
	first_name varchar(50), last_name varchar(50), 
	constraint fk_employees_users foreign key(username) references users(username));


create table clients (
	id int primary key, name varchar(50) unique
);
	
create table employees_clients (
	employee_id int not null, client_id int not null,
	primary key(employee_id, client_id),
	constraint fk_employees_clients_employees foreign key(employee_id) references employees(id),
	constraint fk_employees_clients_clients foreign key(client_id) references clients(id)
);
	
-- end org chart tables

create table cost_center (
	cost_code varchar(50) primary key, name varchar(50) not null
);

create table timesheets (
	id int generated by default as identity(start with 1) primary key,
	week_ending date unique, status varchar(50), employee_id int not null, 
	constraint fk_timesheets_employees foreign key(employee_id) references employees(id)
);
	
create table timesheet_items (
	id int generated by default as identity(start with 1) primary key,
	item_date date not null, cost_code varchar(50) not null, hours float not null,
	unique(item_date, cost_code),
	constraint fk_timesheets_items_cost_centers foreign key(cost_code) references cost_center(cost_code)
);
	
create table employees_timesheets (
	employee_id int not null, timesheet_id int not null,
	primary key(employee_id, timesheet_id),
	constraint fk_employees_timesheets_employees foreign key(employee_id) references employees(id),
	constraint fk_employees_timesheets_timesheets foreign key(timesheet_id) references timesheets(id)
);

create table timesheets_timesheet_items (
	timesheet_id int not null, timesheet_item_id int not null,
	primary key(timesheet_id, timesheet_item_id),
	constraint fk_timesheets_timesheet_items_timesheets foreign key(timesheet_id) references timesheets(id),
	constraint fk_timesheets_timesheet_items_timesheet_items foreign key(timesheet_item_id) references timesheet_items(id)
);

--create table timesheet_items_cost_centers (
--	timesheet_item_id int not null, cost_center_id int not null,
--	primary key(timesheet_item_id, cost_center_id),
--	constraint fk_tsitems_cost_centers_ts_item foreign key(timesheet_item_id) references timesheet_items(id),
--	constraint fk_tsitems_cost_centers_ts_ccenter foreign key(cost_center_id) references cost_centers(id)
--);

-- begin status report tables

create table status_reports (
	id int generated by default as identity(start with 1) primary key,
	week_ending date not null, description varchar(250));
